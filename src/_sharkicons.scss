@import 'map';

// Font family.
@mixin sharkicons-font($dir: '') {
  @if $dir != '' {
    $dir: $dir + '/';
  }

  @at-root {
    @font-face {
      font-family:            sharkicons;
      src:                    url($dir + 'fonts/sharkicons.eot?v160221');
      src:                    url($dir + 'fonts/sharkicons.eot?#iefix&v160221') format('embedded-opentype'), url($dir + 'fonts/sharkicons.ttf?v160221') format('truetype'), url($dir + 'fonts/sharkicons.woff?v160221') format('woff'), url($dir + 'fonts/sharkicons.svg?v160221#sharkicons') format('svg');
      font-weight:            normal;
      font-style:             normal;
    }
  }
}

// Font family style.
@mixin sharkicon-font-styles {
  font:                       normal normal normal 14px/1 sharkicons;
  text-rendering:             optimizeLegibility;
  -webkit-font-smoothing:     antialiased;
  font-smoothing:             antialiased;
  display:                    inline-block;
  font-size:                  inherit;
  text-decoration:            inherit;
  text-transform:             none;
}

// Sharkicon markup classes.
@mixin sharkicon-classes($prefix: sharkicon) {
  .#{$prefix}::before {
    @include sharkicon-font-styles;
  }

  @each $-key, $-value in $sharkicons {
    .#{$prefix}-#{$-key}::before {
      content:                $-value;
    }
  }

  .#{$prefix}-lg {
    font-size:                1.33333333em;
    line-height:              0.75em;
    vertical-align:          -15%;
  }

  .#{$prefix}-2x {
    font-size:                2em;
  }

  .#{$prefix}-3x {
    font-size:                3em;
  }

  .#{$prefix}-4x {
    font-size:                4em;
  }

  .#{$prefix}-5x {
    font-size:                5em;
  }

  .#{$prefix}-fw {
    text-align:               center;
    width:                    1.28571429em;
  }

  .#{$prefix}-border {
    border-radius:           .1em;
    padding:                 .2em .25em .15em;
    border:                   solid 0.08em;
  }

  .#{$prefix}-pull-left {
    float:                    left;
    margin-right:            .3em;
  }

  .#{$prefix}-pull-right {
    float:                    right;
    margin-left:             .3em;
  }

  .#{$prefix}-rotate-90 {
    @include transform(rotate(90deg));
  }

  .#{$prefix}-rotate-180 {
    @include transform(rotate(180deg));
  }

  .#{$prefix}-rotate-270 {
    @include transform(rotate(270deg));
  }

  .#{$prefix}-flip-horizontal {
    @include transform(scale(-1, 1));
  }

  .#{$prefix}-flip-vertical {
    @include transform(scale(1, -1));
  }

  .#{$prefix}-inverse {
    @include filter(invert(100%));
  }

  .#{$prefix}-spin {
    @include animation(#{$prefix}-animation-spin 2s infinite linear);
  }

  .#{$prefix}-pulse {
    @include animation(#{$prefix}-animation-spin 1s infinite steps(8));
  }

  .#{$prefix}-ul {
    padding-left:             0;
    list-style-type:          none;
    margin-left:              2.14285714em;

    > li {
      position:               relative;

      .#{$prefix}-li {
        text-align:           center;
        position:             absolute;
        left:                -2.14285714em;
        width:                2.14285714em;
        top:                  0.14285714em;

        .#{$prefix}-lg {
          left:              -1.85714286em;
        }
      }
    }
  }

  .#{$prefix}-stack {
    width:                    2em;
    height:                   2em;
    line-height:              2em;
    vertical-align:           middle;
    position:                 relative;
    display:                  inline-block;

    .#{$prefix}-stack-1x,
    .#{$prefix}-stack-2x {
      left:                   0;
      width:                  100%;
      text-align:             center;
      position:               absolute;
    }

    .#{$prefix}-stack-1x {
      line-height:            inherit;
    }

    .#{$prefix}-stack-2x {
      font-size:              2em;
    }
  }

  @at-root {
    @include keyframes(#{$prefix}-animation-spin) {
      0% {
        @include transform(rotate(0deg));
      }

      100% {
        @include transform(rotate(359deg));
      }
    }
  }
}

// Long markup classes.
@mixin sharkicon-long-classes {
  @include sharkicon-classes(sharkicon);
}

// Short markup classes.
@mixin sharkicon-short-classes {
  @include sharkicon-classes(si);
}

// Custom markup classes.
@mixin sharkicon-custom-classes($prefix) {
  @include sharkicon-classes($prefix);
}

// Make an icon out of any element.
@mixin sharkicon($icon, $position: before) {
  &::#{$position} {
    @include sharkicon-font-styles;

    content:                  map-get($sharkicons, $icon);
  }
}
